diff --color -Naur ./libcxx/include/memory ./libcxx/include/memory
--- ./libcxx/include/__memory/temporary_buffer.h	2021-04-06 18:38:18.000000000 +0200
+++ ./libcxx_patched/include/__memory/temporary_buffer.h	2022-02-01 13:23:01.213701098 +0100
@@ -73,7 +73,7 @@ template <class _Tp>
 inline _LIBCPP_INLINE_VISIBILITY
 void return_temporary_buffer(_Tp* __p) _NOEXCEPT
 {
-  _VSTD::__libcpp_deallocate_unsized((void*)__p, _LIBCPP_ALIGNOF(_Tp));
+  //_VSTD::__libcpp_deallocate_unsized((void*)__p, _LIBCPP_ALIGNOF(_Tp));
 }
 

 #if _LIBCPP_STD_VER <= 14 || defined(_LIBCPP_ENABLE_CXX17_REMOVED_AUTO_PTR)
diff --color -Naur ./libcxx/include/__split_buffer ./libcxx_patched/include/__split_buffer
--- ./libcxx/include/__split_buffer	2021-04-06 18:38:18.000000000 +0200
+++ ./libcxx_patched/include/__split_buffer	2022-01-24 22:10:29.377498125 +0100
@@ -311,7 +311,7 @@
 __split_buffer<_Tp, _Allocator>::__split_buffer(size_type __cap, size_type __start, __alloc_rr& __a)
     : __end_cap_(nullptr, __a)
 {
-    __first_ = __cap != 0 ? __alloc_traits::allocate(__alloc(), __cap) : nullptr;
+    __first_ = __cap != 0 ? __alloc_traits::allocate(__alloc(), __cap) : ((pointer)nullptr);
     __begin_ = __end_ = __first_ + __start;
     __end_cap() = __first_ + __cap;
 }
diff --git a/src/ios.cpp b/src/ios.cpp
--- ./libcxx/src/ios.cpp
+++ ./libcxx_patched/src/ios.cpp
@@ -120,7 +120,7 @@ ios_base::__call_callbacks(event ev)
 locale
 ios_base::imbue(const locale& newloc)
 {
-    static_assert(sizeof(locale) == sizeof(__loc_), "");
+    //static_assert(sizeof(locale) == sizeof(__loc_), "");
     locale& loc_storage = *reinterpret_cast<locale*>(&__loc_);
     locale oldloc = loc_storage;
     loc_storage = newloc;
diff --git a/src/ios.cpp b/src/ios.cpp
--- ./libcxx/include/ios
+++ ./libcxx_patched/include/ios
@@ -374,6 +374,7 @@ private:
     iostate         __exceptions_;
     void*           __rdbuf_;
     void*           __loc_;
+    void*           __loc_2;
     event_callback* __fn_;
     int*            __index_;
     size_t          __event_size_;
